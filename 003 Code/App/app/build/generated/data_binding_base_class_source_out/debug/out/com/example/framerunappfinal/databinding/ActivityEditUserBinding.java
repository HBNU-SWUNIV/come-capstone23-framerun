// Generated by view binder compiler. Do not edit!
package com.example.framerunappfinal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.framerunappfinal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText UserContent;

  @NonNull
  public final EditText UserTitle;

  @NonNull
  public final TextView audiofilename;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final Button getAudio;

  @NonNull
  public final Button getImage;

  @NonNull
  public final RecyclerView recyclerView;

  private ActivityEditUserBinding(@NonNull ConstraintLayout rootView, @NonNull EditText UserContent,
      @NonNull EditText UserTitle, @NonNull TextView audiofilename, @NonNull Button btnSave,
      @NonNull Button getAudio, @NonNull Button getImage, @NonNull RecyclerView recyclerView) {
    this.rootView = rootView;
    this.UserContent = UserContent;
    this.UserTitle = UserTitle;
    this.audiofilename = audiofilename;
    this.btnSave = btnSave;
    this.getAudio = getAudio;
    this.getImage = getImage;
    this.recyclerView = recyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.UserContent;
      EditText UserContent = ViewBindings.findChildViewById(rootView, id);
      if (UserContent == null) {
        break missingId;
      }

      id = R.id.UserTitle;
      EditText UserTitle = ViewBindings.findChildViewById(rootView, id);
      if (UserTitle == null) {
        break missingId;
      }

      id = R.id.audiofilename;
      TextView audiofilename = ViewBindings.findChildViewById(rootView, id);
      if (audiofilename == null) {
        break missingId;
      }

      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.getAudio;
      Button getAudio = ViewBindings.findChildViewById(rootView, id);
      if (getAudio == null) {
        break missingId;
      }

      id = R.id.getImage;
      Button getImage = ViewBindings.findChildViewById(rootView, id);
      if (getImage == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      return new ActivityEditUserBinding((ConstraintLayout) rootView, UserContent, UserTitle,
          audiofilename, btnSave, getAudio, getImage, recyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
